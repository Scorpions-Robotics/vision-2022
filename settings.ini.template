; This is a template of settings.ini.
; Copy this file and rename it to settings.ini. Then edit it to your needs.


[network]
; Flask server's IP address.
FLASK_SERVER = 10.76.72.10

; Set to 1 if you are not using roboRIO as the server.
NETWORKTABLES_SERVER_MODE = 1

; Set the IP address of the network tables server. If you are not using roboRIO as the server, set this to the IP address of the server.
; If you are using roboRIO as the server, you need to set this to the IP address of the robot, which is roborio-7672-frc.local (mDNS).
NETWORKTABLES_SERVER = 10.76.72.10

; Set your NetworkTables table name. In our case it is "vision".
NETWORKTABLES_TABLE = vision


[system]
; Set to 1 if you want the script to wait for Jetson to warm up before starting. Default is 1.
WAIT_FOR_JETSON = 1

; Working directory, aka where this file is located. Don't forget the trailing slash.
WORKING_DIR = /home/scorpions/repos/vision-2022/


[calibration]
; Height of the target. In centimeters.
TARGET_HEIGHT = 264


[cascade]
; Cascade classifier settings.

; Set between 2 and 6. Higher is more accurate but slower. Default is 3. This should be an integer.
MIN_NEIGHBORS = 3

; Minimum size of a detected object. Default is 15x15. This should be a tuple.
MIN_SIZE = 15
        15

[colors]
; Set upper and lower HSV values for the requested color.

; tuple(map(int, config.get("colors", "HOOP_HSV_{UPPER|LOWER}").split("\n")))
HOOP_HSV_LOWER = 40
                60
                60
HOOP_HSV_UPPER = 75
                255
                255

; tuple(map(int, config.get("colors", "RED_BALL_HSV_{UPPER|LOWER}").split("\n")))
RED_BALL_HSV_LOWER = 0
                    60
                    60
RED_BALL_HSV_UPPER = 10
                    255
                    255

; tuple(map(int, config.get("colors", "BLUE_BALL_HSV_{UPPER|LOWER}").split("\n")))
BLUE_BALL_HSV_LOWER = 100
                    70
                    70
BLUE_BALL_HSV_UPPER = 125
                    255
                    255


[camera]
; Index number of the camera to use. Default is -1.
CAMERA_INDEX = -1

; Only used on Linux. Gets values between 1 and 5000. Default is 3.
LINUX_HOOP_EXPOSURE = 3

; Only used on Windows. Default is -10.
WINDOWS_HOOP_EXPOSURE = -10

; Width and height of the frame. Default is 320x240. Use 320x240 on coprocessor for more performance. You can use any resolution as long as you keep the ratio at 4:3.
FRAME_WIDTH = 320
FRAME_HEIGHT = 240

; Vertical Field of View of camera.
VERTICAL_FOV = 60

; Mount angle of camera while pointing at the hoop.
MOUNT_ANGLE_HOOP = 35

; Mount angle of camera while pointing at balls.
MOUNT_ANGLE_BALL = -40

; Mount height of the from the ground. In centimeters.
CAMERA_MOUNT_HEIGHT = 42


[fancy]
; Flip frame or not. Gets values 0 or 1. Default is 0.
FLIP_FRAME = 0

; Frame angle. Gets only integer values. Default is 0.
FRAME_ANGLE = 0

; White balance. Gets values 0 or 1. Default is 1.
WHITE_BALANCE = 1

; If frame is shown or not. Gets values 0 or 1. Default is 0. Use 0 while running on Jetson.
SHOW_FRAME = 0

; If the frame is streamed or not. Gets values 0 or 1. Default is 1.
STREAM_FRAME = 1

; If the values are printed or not. Gets values 0 or 1. Default is 1.
PRINT_VALUES = 1
